Python library utilizing newer IR tools (no LIRC package needed!).

Uses Python3 (tested on 3.8)

1. Install ir-keytable, v4l-utils (for ir-ctl) and raspotify
2. Edit /boot/config.txt to add dtoverlay lines for gpio-ir and gpio-ir-tx (example below):
    dtoverlay=gpio-ir,gpio_pin=24
    dtoverlay=gpio-ir-tx,gpio_pin=25
   2b (optional): copy .rules file to /etc/udev/rules.d for better device names in /dev/
   
3. reboot and check that /dev contains lirc0 (transmitter) and lirc1 (receiver).
   Not sure how these are ordered yet.
4. Run "sudo chmod +x test-hook.sh"
5. Add "--onevent *path-to-this-repo*/test-hook.sh" to the OPTIONS= line in /etc/default/raspotify
6. restart raspotify ("service raspotify restart")
7. Copy speakerctl.service to /lib/systemd/system and run:
   7a. systemctl daemon-reload
   7b. systemctl enable speakerctl
   7c. Feel free to rename the service as desired

TODO:
-Use actual logging module instead of cluttered prints
-Remote file passed in as argument
-Add ir_rx as part of ir_lib
-Grab protocol from remote file, use as part of transmit cmd 
-Create remote class to store codes,protocol,name,etc
-Automated-ish install script?
-Ability to map two ir codes (RX one code and TX the mapped code)